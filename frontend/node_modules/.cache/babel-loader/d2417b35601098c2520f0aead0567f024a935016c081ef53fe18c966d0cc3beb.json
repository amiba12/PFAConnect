{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amiba\\\\Desktop\\\\Projet stage 2025\\\\Gestion de PFA\\\\PFAConnet\\\\frontend\\\\src\\\\pages\\\\MessagesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../api/axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessagesPage() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [projets, setProjets] = useState([]);\n  const [selectedProjet, setSelectedProjet] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [contenu, setContenu] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    loadUserAndData();\n  }, []);\n  const loadUserAndData = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      // Charger l'utilisateur\n      const userResponse = await api.get(\"/users/me\");\n      const currentUser = userResponse.data;\n      setUser(currentUser);\n      if (currentUser.role === \"ETUDIANT\") {\n        // Pour les étudiants : charger leur projet unique\n        try {\n          const projetResponse = await api.get(\"/projets/mon-projet\");\n          const projetData = projetResponse.data;\n          if (projetData && projetData.id) {\n            setSelectedProjet(projetData);\n            await loadMessagesForProjet(projetData.id);\n          } else {\n            setError(\"Vous n'avez pas de projet. Créez un projet pour utiliser la messagerie.\");\n          }\n        } catch (err) {\n          console.error(\"Erreur chargement projet étudiant\", err);\n          setError(\"Erreur lors du chargement de votre projet.\");\n        }\n      } else if (currentUser.role === \"ENCADRANT\") {\n        // Pour les encadrants : charger tous leurs projets\n        try {\n          const projetsResponse = await api.get(\"/projets/encadrant\");\n          const projetsData = Array.isArray(projetsResponse.data) ? projetsResponse.data : [];\n          setProjets(projetsData);\n          console.log(\"📋 Projets encadrés chargés:\", projetsData.length);\n          if (projetsData.length > 0) {\n            setSelectedProjet(projetsData[0]);\n            await loadMessagesForProjet(projetsData[0].id);\n          } else {\n            setError(\"Vous n'encadrez aucun projet pour le moment.\");\n          }\n        } catch (err) {\n          console.error(\"Erreur chargement projets encadrant\", err);\n          setError(\"Erreur lors du chargement des projets encadrés.\");\n        }\n      }\n    } catch (err) {\n      console.error(\"Erreur chargement utilisateur\", err);\n      setError(\"Impossible de charger vos informations. Veuillez vous reconnecter.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadMessagesForProjet = async projetId => {\n    try {\n      console.log(\"📨 Chargement des messages pour le projet:\", projetId);\n      const messagesResponse = await api.get(`/messages/projet/${projetId}`);\n      const messagesData = Array.isArray(messagesResponse.data) ? messagesResponse.data : [];\n      console.log(\"📨 Messages reçus:\", messagesData.length);\n      setMessages(messagesData);\n    } catch (err) {\n      console.error(\"Erreur chargement messages\", err);\n      setMessages([]);\n    }\n  };\n  const handleProjetChange = async projetId => {\n    const projet = projets.find(p => p.id == projetId);\n    if (projet) {\n      setSelectedProjet(projet);\n      await loadMessagesForProjet(projet.id);\n    }\n  };\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!contenu || !selectedProjet) return;\n    console.log(\"🚀 Envoi du message pour le projet:\", selectedProjet.id);\n    console.log(\"📝 Contenu du message:\", contenu);\n    try {\n      console.log(\"📤 Envoi du message à l'API...\");\n      await api.post(`/messages/ajouter/${selectedProjet.id}`, {\n        contenu\n      });\n      console.log(\"✅ Message envoyé avec succès\");\n      setContenu(\"\");\n      console.log(\"🔄 Rechargement des messages...\");\n      await loadMessagesForProjet(selectedProjet.id);\n      console.log(\"✅ Message envoyé et messages mis à jour avec succès\");\n    } catch (err) {\n      var _err$response;\n      console.error(\"❌ Erreur lors de l'envoi du message:\", err);\n      console.error(\"❌ Détails de l'erreur:\", (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data);\n      alert(\"Erreur lors de l'envoi du message. Veuillez réessayer.\");\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 12\n    }, this);\n  }\n  if (!selectedProjet) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Aucun projet s\\xE9lectionn\\xE9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Messagerie du projet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), user && user.role === \"ENCADRANT\" && projets.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Projet : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedProjet.id,\n        onChange: e => handleProjetChange(e.target.value),\n        style: {\n          marginLeft: 10,\n          padding: 5\n        },\n        children: projets.map(projet => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: projet.id,\n          children: projet.titre\n        }, projet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: 300,\n        overflowY: \"auto\",\n        border: \"1px solid #ccc\",\n        padding: 10\n      },\n      children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [m.auteur && m.auteur.nom, \" :\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), \" \", m.contenu, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 10,\n            color: '#888'\n          },\n          children: new Date(m.date).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 61\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSend,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: contenu,\n        onChange: e => setContenu(e.target.value),\n        placeholder: \"Votre message\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(MessagesPage, \"TNhsGxOdbvROGZ4YzZuNW/xN3tk=\");\n_c = MessagesPage;\nexport default MessagesPage;\nvar _c;\n$RefreshReg$(_c, \"MessagesPage\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","MessagesPage","_s","user","setUser","projets","setProjets","selectedProjet","setSelectedProjet","messages","setMessages","contenu","setContenu","loading","setLoading","error","setError","loadUserAndData","userResponse","get","currentUser","data","role","projetResponse","projetData","id","loadMessagesForProjet","err","console","projetsResponse","projetsData","Array","isArray","log","length","projetId","messagesResponse","messagesData","handleProjetChange","projet","find","p","handleSend","e","preventDefault","post","_err$response","response","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","value","onChange","target","marginLeft","padding","map","titre","maxHeight","overflowY","border","m","auteur","nom","fontSize","Date","date","toLocaleString","onSubmit","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/Users/amiba/Desktop/Projet stage 2025/Gestion de PFA/PFAConnet/frontend/src/pages/MessagesPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport api from \"../api/axios\";\r\n\r\nfunction MessagesPage() {\r\n  const [user, setUser] = useState(null);\r\n  const [projets, setProjets] = useState([]);\r\n  const [selectedProjet, setSelectedProjet] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [contenu, setContenu] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    loadUserAndData();\r\n  }, []);\r\n\r\n  const loadUserAndData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      \r\n      // Charger l'utilisateur\r\n      const userResponse = await api.get(\"/users/me\");\r\n      const currentUser = userResponse.data;\r\n      setUser(currentUser);\r\n      \r\n      if (currentUser.role === \"ETUDIANT\") {\r\n        // Pour les étudiants : charger leur projet unique\r\n        try {\r\n          const projetResponse = await api.get(\"/projets/mon-projet\");\r\n          const projetData = projetResponse.data;\r\n          if (projetData && projetData.id) {\r\n            setSelectedProjet(projetData);\r\n            await loadMessagesForProjet(projetData.id);\r\n          } else {\r\n            setError(\"Vous n'avez pas de projet. Créez un projet pour utiliser la messagerie.\");\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Erreur chargement projet étudiant\", err);\r\n          setError(\"Erreur lors du chargement de votre projet.\");\r\n        }\r\n      } else if (currentUser.role === \"ENCADRANT\") {\r\n        // Pour les encadrants : charger tous leurs projets\r\n        try {\r\n          const projetsResponse = await api.get(\"/projets/encadrant\");\r\n          const projetsData = Array.isArray(projetsResponse.data) ? projetsResponse.data : [];\r\n          setProjets(projetsData);\r\n          console.log(\"📋 Projets encadrés chargés:\", projetsData.length);\r\n          \r\n          if (projetsData.length > 0) {\r\n            setSelectedProjet(projetsData[0]);\r\n            await loadMessagesForProjet(projetsData[0].id);\r\n          } else {\r\n            setError(\"Vous n'encadrez aucun projet pour le moment.\");\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Erreur chargement projets encadrant\", err);\r\n          setError(\"Erreur lors du chargement des projets encadrés.\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur chargement utilisateur\", err);\r\n      setError(\"Impossible de charger vos informations. Veuillez vous reconnecter.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadMessagesForProjet = async (projetId) => {\r\n    try {\r\n      console.log(\"📨 Chargement des messages pour le projet:\", projetId);\r\n      const messagesResponse = await api.get(`/messages/projet/${projetId}`);\r\n      const messagesData = Array.isArray(messagesResponse.data) ? messagesResponse.data : [];\r\n      console.log(\"📨 Messages reçus:\", messagesData.length);\r\n      setMessages(messagesData);\r\n    } catch (err) {\r\n      console.error(\"Erreur chargement messages\", err);\r\n      setMessages([]);\r\n    }\r\n  };\r\n\r\n  const handleProjetChange = async (projetId) => {\r\n    const projet = projets.find(p => p.id == projetId);\r\n    if (projet) {\r\n      setSelectedProjet(projet);\r\n      await loadMessagesForProjet(projet.id);\r\n    }\r\n  };\r\n\r\n  const handleSend = async (e) => {\r\n    e.preventDefault();\r\n    if (!contenu || !selectedProjet) return;\r\n    \r\n    console.log(\"🚀 Envoi du message pour le projet:\", selectedProjet.id);\r\n    console.log(\"📝 Contenu du message:\", contenu);\r\n    \r\n    try {\r\n      console.log(\"📤 Envoi du message à l'API...\");\r\n      await api.post(`/messages/ajouter/${selectedProjet.id}`, { contenu });\r\n      console.log(\"✅ Message envoyé avec succès\");\r\n      setContenu(\"\");\r\n      \r\n      console.log(\"🔄 Rechargement des messages...\");\r\n      await loadMessagesForProjet(selectedProjet.id);\r\n      console.log(\"✅ Message envoyé et messages mis à jour avec succès\");\r\n    } catch (err) {\r\n      console.error(\"❌ Erreur lors de l'envoi du message:\", err);\r\n      console.error(\"❌ Détails de l'erreur:\", err.response?.data);\r\n      alert(\"Erreur lors de l'envoi du message. Veuillez réessayer.\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Chargement...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div style={{color:'red'}}>{error}</div>;\r\n  }\r\n\r\n  if (!selectedProjet) {\r\n    return <div style={{color:'red'}}>Aucun projet sélectionné.</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Messagerie du projet</h2>\r\n      \r\n      {user && user.role === \"ENCADRANT\" && projets.length > 0 && (\r\n        <div style={{ marginBottom: 20 }}>\r\n          <label>Projet : </label>\r\n          <select \r\n            value={selectedProjet.id} \r\n            onChange={(e) => handleProjetChange(e.target.value)}\r\n            style={{ marginLeft: 10, padding: 5 }}\r\n          >\r\n            {projets.map((projet) => (\r\n              <option key={projet.id} value={projet.id}>\r\n                {projet.titre}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n      \r\n      <div style={{ maxHeight: 300, overflowY: \"auto\", border: \"1px solid #ccc\", padding: 10 }}>\r\n        {messages.map((m) => (\r\n          <div key={m.id}>\r\n            <b>{m.auteur && m.auteur.nom} :</b> {m.contenu} <span style={{ fontSize: 10, color: '#888' }}>{new Date(m.date).toLocaleString()}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSend}>\r\n        <input\r\n          value={contenu}\r\n          onChange={(e) => setContenu(e.target.value)}\r\n          placeholder=\"Votre message\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Envoyer</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessagesPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}